name: 'test'
on: 
  pull_request:
  push:
    branches:
      - master

jobs:        
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: run
      id: stepId
      uses: ./
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        contexts: 'Test State'
        timeout: 120
        notPresentTimeout: 60
    - name: result
      run: 'echo ${{ steps.stepId.outputs.result }} ${{ steps.stepId.outputs.failedCheckNames }}'
    - name: fail
      uses: Sibz/action-always-fail@v1.0.1
      if: steps.stepId.outputs.result != 'success'
      
  test2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: run
      id: stepId
      uses: ./
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        contexts: 'Test State that never exist'
        timeout: 30
        notPresentTimeout: 20
    - name: result
      run: |
        echo ${{ steps.stepId.outputs.result }}
        echo ${{ steps.stepId.outputs.failedCheckNames }}
        echo ${{ steps.stepId.outputs.failedCheckStates }}
    - name: fail
      uses: Sibz/action-always-fail@v1.0.1
      if: steps.stepId.outputs.failedCheckStates != 'not_present'

  test3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: run
      id: stepId
      uses: ./
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        contexts: 'Test State that stays pending'
        timeout: 25
        notPresentTimeout: 20
    - name: result
      run: |
        echo ${{ steps.stepId.outputs.result }}
        echo ${{ steps.stepId.outputs.failedCheckNames }}
        echo ${{ steps.stepId.outputs.failedCheckStates }}
    - uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        state: 'success'
        context: 'Test State that stays pending'
    - name: fail
      uses: Sibz/action-always-fail@v1.0.1
      if: steps.stepId.outputs.failedCheckStates != 'pending2'

  test4:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: run
      id: stepId
      uses: ./
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        contexts: 'Test State that is initially a failure'
        timeout: 30
        notPresentTimeout: 20
    - name: result
      run: |
        echo ${{ steps.stepId.outputs.result }}
        echo ${{ steps.stepId.outputs.failedCheckNames }}
        echo ${{ steps.stepId.outputs.failedCheckStates }}
    - uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        state: 'success'
        context: 'Test State that is initially a failure'
    - name: fail
      uses: Sibz/action-always-fail@v1.0.1
      if: steps.stepId.outputs.result != 'failure'

  setup_state:
    runs-on: ubuntu-latest
    steps:
    - uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        state: 'success'
        context: 'Test State'

  setup_state3:
    runs-on: ubuntu-latest
    steps:
    - uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        state: 'pending'
        context: 'Test State that stays pending'

  setup_state4:
    runs-on: ubuntu-latest
    steps:
    - uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        state: 'failure'
        context: 'Test State that is initially a failure'
    
      
    